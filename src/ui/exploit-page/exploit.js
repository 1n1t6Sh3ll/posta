import React from "react";
import ReactDOM from "react-dom";
import Editor from "../components/editor";
import Layout from '../components/layout'
import "./exploit.scss";
import Header from '../components/header';
import Log from "../components/log";
const {decode } = require('js-base64').Base64;


export default class App extends React.Component {
  captureEditorSession(session) {
    this.editorSession = session;
    let _urlSearch = new URLSearchParams(location.search);
    try {
      let _code = _urlSearch.get("code");
      let code = _code ? decode(_urlSearch.get("code")) : "";
      this.editorSession.setValue(code);
      this.editorSession.setMode({
        v: Date.now(),
        path: "ace/mode/json"
      })

    } catch (error) {
      console.error(error);
    }
  }

  openAsTab(target){
    console.log(target)
    this.targetWindow = window.open(target)
  }

  getEditorData(){
    return this.editorSession.getValue();
  }

  exploit(payload){
    if (this.targetWindow && this.targetWindow.postMessage) this.targetWindow.postMessage(payload,"*")
    window.frames[0].postMessage(payload,"*");
  }

  render() {
    let _urlSearch = new URLSearchParams(location.search);
    let _target = _urlSearch.get("target");
    let target = _target ? decode(_target) : undefined 
    
    let {
      activeTarget=target,
      nextTarget=target
    } = this.state || {
      activeTarget:target,
      nextTarget:target
    };

    return <>
    
    <Header></Header>
    
    <div className="target head">
      <input placeholder="Type in target Url" value={nextTarget} onChange={(e)=>this.setState({
        nextTarget:e.target.value
      })}></input>
      <button onClick={()=>this.setState({activeTarget:nextTarget})}>Set Target</button>
      </div>
    <div style={{height:"calc(100% - 120px)"}}>
    <Layout layout={[
      {
        h:80,
      w:100,
      content:<Layout layout={
      [
        {
          w: 40,
          h: 100,
          content: <div className="actions">
            <div className="buttons">
              <div onClick={()=>this.exploit(undefined)}>Send undefined</div>
              <div onClick={()=>{
                try {
                  let obj = this.getEditorData();
                  this.exploit(JSON.parse(obj))
                } catch (error) {
                  
                }
                
              }}>Send as object</div>
              <div onClick={()=>this.exploit(this.getEditorData())}>Send as string</div>
              <div onClick={()=>this.exploit(Number(this.getEditorData()))}>Send as number</div>
              <div onClick={()=>this.exploit(null)}>Send null</div>
              <div onClick={()=>this.openAsTab(activeTarget)}>Open as tab</div>
            </div>
            <div className="active-target" style={{padding:8}}>{activeTarget}</div>
            <div className="iframe">
              <iframe style={{width:"100%",height:"100%"}}  src={activeTarget}></iframe>
            </div>
          </div>
        },
        {
          w: 60,
          h: 100,
          content: <div style={{ maxHeight: "100%", backgroundColor: "#000000", height: "100%" }}>
            <Editor style={{ height: "100%", width: "100%" }} onMount={(session) => this.captureEditorSession(session)}></Editor>
          </div>
        }
      ]}
    ></Layout>
    }, {
      h:20,
      w:100,
      content:<Log></Log>
    }
    ]}>

    </Layout>
    </div>
    </>
  }
}

ReactDOM.render(<App></App>, document.getElementById("root"));